{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "shiny-text",
  "type": "registry:ui",
  "title": "Shiny Text",
  "description": "A text component that smoothly animates text changes with a shiny transition effect.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "registry/text/shiny/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { cn } from '@/lib/utils';\nimport { motion } from 'motion/react';\n\ntype ShinyTextProps = React.ComponentProps<'div'> & {\n  text: string;\n  speed?: number;\n  disable?: boolean;\n  shimmerColor?: string;\n  baseColor?: string;\n  theme?: 'light' | 'dark' | 'auto';\n};\n\nconst ShinyText = ({\n  text,\n  speed = 5,\n  disable = false,\n  shimmerColor,\n  baseColor,\n  theme = 'auto',\n  className,\n  style,\n  ...props\n}: ShinyTextProps) => {\n  const animationDuration = speed;\n\n  // 根据主题设置默认颜色\n  const getColors = () => {\n    if (shimmerColor && baseColor) {\n      return { shimmer: shimmerColor, base: baseColor };\n    }\n\n    switch (theme) {\n      case 'light':\n        return {\n          shimmer: '#000000',\n          base: '#9ca3af', // gray-400\n        };\n      case 'dark':\n        return {\n          shimmer: '#ffffff',\n          base: '#6b7280', // gray-500\n        };\n      default: // auto\n        return {\n          shimmer: '#000000',\n          base: '#9ca3af',\n        };\n    }\n  };\n\n  const colors = getColors();\n\n  return (\n    <div\n      className={cn('relative inline-block', className)}\n      style={style}\n      {...props}\n    >\n      {/* 基础文字 */}\n      <div className=\"font-semibold\" style={{ color: colors.base }}>\n        {text}\n      </div>\n\n      {/* 闪光效果遮罩 */}\n      <motion.div\n        className=\"absolute inset-0 font-semibold overflow-hidden pointer-events-none\"\n        style={{\n          background: `linear-gradient(120deg, transparent 0%, transparent 40%, ${colors.shimmer} 50%, transparent 60%, transparent 100%)`,\n          backgroundSize: '200% 100%',\n          WebkitBackgroundClip: 'text',\n          backgroundClip: 'text',\n          color: 'transparent',\n          WebkitTextFillColor: 'transparent',\n        }}\n        animate={\n          disable\n            ? { backgroundPosition: '100% 0%' }\n            : {\n                backgroundPosition: ['100% 0%', '-100% 0%'],\n              }\n        }\n        transition={\n          disable\n            ? { duration: 0 }\n            : {\n                duration: animationDuration,\n                ease: 'linear',\n                repeat: Infinity,\n              }\n        }\n      >\n        {text}\n      </motion.div>\n    </div>\n  );\n};\n\nexport { ShinyText, type ShinyTextProps };\n",
      "type": "registry:ui",
      "target": "components/animate-ui/text/shiny.tsx"
    }
  ]
}